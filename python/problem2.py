"""
Project Euler Problem 2

http://projecteuler.net/index.php?section=problems&id=2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

def fibonacci_seq(max_val):
    """
    Generate the Fibonacci sequence whose values do not exceed
    max_val.
    """
    a, b = 1, 2
    while a < max_val:
        yield a
        a, b = b, a + b

def even_fibonacci_seq(max_val):
    """
    Generates the even numbers in the Fibonacci sequence whose values
    do not exceed max_val.
    """
    for x in fibonacci_seq(max_val):
        if not x%2:
            yield x

def solution():
    """
    Returns the sum of the values in even_fibonacci_seq
    """
    return sum(even_fibonacci_seq(4000000))

if __name__ == "__main__":
    print solution()
